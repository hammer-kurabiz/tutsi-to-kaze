{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-discounts.css' | asset_url | stylesheet_tag }}

<div class="page-width{% if cart == empty %} is-empty{% endif %}" id="main-cart-footer" data-id="{{ section.id }}">
  <div>
    <div class="cart__footer _renew clearfix">
      <div class="cart__blocks cart-right">
{% for block in section.blocks %}
  {%- case block.type -%}
    {%- when '@app' -%}
      {% render block %}
    {%- when 'subtotal' -%}

        <div class="js-contents" {{ block.shopify_attributes }}>
          <div class="totals">
            <h3 class="totals__subtotal">{{ 'sections.cart.subtotal' | t }}</h3>
            <p class="totals__subtotal-value">{{ cart.total_price | money_with_currency }}</p>
          </div>
          <div>
      {%- if cart.cart_level_discount_applications.size > 0 -%}

            <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
        {%- for discount in cart.cart_level_discount_applications -%}

              <li class="discounts__discount discounts__discount--position">
                {%- render 'icon-discount' -%}
                {{ discount.title }}
                (-{{ discount.total_allocated_amount | money }})
              </li>
        {%- endfor -%}

            </ul>
      {%- endif -%}

          </div>
          <small class="tax-note caption-large rte">
      {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
        {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
      {%- elsif cart.taxes_included -%}
        {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
      {%- elsif shop.shipping_policy.body != blank -%}
        {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
      {%- else -%}
        {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
      {%- endif -%}

          </small>

          <!-- あと◯円で送料無料 start -->
          {%- assign total = 0 -%}
          {%- for item in cart.items -%}{% #カートの商品を1つずつ確認 %}
            {%- assign kakunin = true -%}
            {%- for collection in item.product.collections -%}{% #各商品のコレクションを配列で返す %}
              {%- if collection.title contains "ドライフラワー定期便" or collection.title contains "送料無料商品" or collection.title contains "イベント" -%}{% #コレクションに「ドライフラワー定期便」「送料無料商品」「イベント」が含まれていればfalseを返す %}
                {%- if cart.item_count < 2 -%}
                  {%- assign kakunin = false -%}
                  {%- break -%}
                {%- endif -%}
              {%- endif -%}
            {%- endfor -%}
            {%- unless item.requires_shipping -%}{% #「配送が必要な商品です」にチェックが入っていなかったら %}
              {%- assign kakunin = false -%}
            {%- endunless -%}
            {%- if kakunin -%}{% #kakuninがtrueなら %}
              {%- assign quantity = item.quantity -%}{% #その商品のカート内の個数 %}
              {%- assign price = item.price | money | replace: "¥", "" | replace: ",", "" | times: quantity -%}{% #変数から「¥」と「,」を削除して、times:でその商品の個数分をかける %}
              {%- assign total = total | plus: price -%}{% #total変数に金額を足していく %}
            {%- endif -%}
          {%- endfor -%}
          {%- if total < 7000 and total >= 1 -%}{% #トータル金額が7000円未満の場合 %}
            <!--<p class="tax-note" style="color: rgb(68, 85, 172);">
            {%- assign free = 7000 | minus: total -%}{% #7000からトータル金額を引いた数値を変数にセット %}
              あと{{ free }}円で<big style="font-weight:bold;">送料無料</big>
            </p>-->
          {%- endif -%}
          <!-- あと◯円で送料無料 end -->
        </div>
  {%- endcase -%}
{% endfor %}

      </div>
{%- if section.settings.show_cart_note -%}
  {% comment %}
    2023-10-03 変更
  {% endcomment %}

      <div class="cart__announce cart-left">
        <cart-note class="cart__note field">
          <label for="Cart-note">{{ 'sections.cart.note' | t }}</label>
          <textarea 
            class="text-area field__input" 
            name="note" 
            form="cart" 
            id="Cart-note" 
            placeholder="{{ 'sections.cart.note' | t }}"
            style="height:clamp(100px, 20vh, 200px);"
          >{{ cart.note }}</textarea>
        </cart-note>
        <div class="cart__announce-label space">確認事項</div>
        <div class="space-ptit" style="font-size:0.875em;">
          {{ section.settings.note | newline_to_br }}
        </div>
        {% comment %}
        <div class="space-ptit">
          <label for="confirm-checkbox">
            <input type="checkbox" id="confirm-checkbox" value="iConfirmed">
            <span>確認しました<span class="ec-required red font--1">&emsp;必須</span></span>
          </label>
        </div>
        {% endcomment %}
      </div>
{%- endif -%}

      <div class="cart__blocks cart-right">
{% for block in section.blocks %}
  {% if block.type == 'buttons' %}

        <div class="cart__ctas" {{ block.shopify_attributes }}>
          <noscript>
            <button type="submit" class="cart__update-button button button--secondary" form="cart">
              {{ 'sections.cart.update' | t }}
            </button>
          </noscript>
          <button type="submit" id="checkout" class="cart__checkout-button button" name="checkout"{% if cart == empty %} disabled{% endif %} form="cart">
            {{ 'sections.cart.checkout' | t }}
          </button>
        </div>
    {% comment %}
    {%- if additional_checkout_buttons -%}

        <div class="cart__dynamic-checkout-buttons additional-checkout-buttons">
          {{ content_for_additional_checkout_buttons }}
        </div>
    {%- endif -%}
    {% endcomment %}
  {% endif %}
{% endfor %}

        <div id="cart-errors"></div>
      </div>
    </div>
  </div>
</div>

{% javascript %}
  class CartNote extends HTMLElement {
    constructor() {
      super();

      this.addEventListener('change', debounce((event) => {
        const body = JSON.stringify({ note: event.target.value });
        fetch(`${routes.cart_update_url}`, {...fetchConfig(), ...{ body }});
      }, 300))
    }
  }

  customElements.define('cart-note', CartNote);
{% endjavascript %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    function isIE() {
      const ua = window.navigator.userAgent;
      const msie = ua.indexOf('MSIE ');
      const trident = ua.indexOf('Trident/');

      return (msie > 0 || trident > 0);
    }

    if (!isIE()) return;
    const cartSubmitInput = document.createElement('input');
    cartSubmitInput.setAttribute('name', 'checkout');
    cartSubmitInput.setAttribute('type', 'hidden');
    document.querySelector('#cart').appendChild(cartSubmitInput);
    document.querySelector('#checkout').addEventListener('click', function(event) {
      document.querySelector('#cart').submit();
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.main-cart-footer.name",
  "class": "cart__footer-wrapper",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_cart_note",
      "default": false,
      "label": "t:sections.main-cart-footer.settings.show_cart_note.label"
    },
    {
      "type": "textarea",
      "id": "note",
      "label": "確認事項"
    }
  ],
  "blocks": [
    {
      "type": "subtotal",
      "name": "t:sections.main-cart-footer.blocks.subtotal.name",
      "limit": 1
    },
    {
      "type": "buttons",
      "name": "t:sections.main-cart-footer.blocks.buttons.name",
      "limit": 1
    },
    {
      "type": "@app"
    }
  ]
}
{% endschema %}